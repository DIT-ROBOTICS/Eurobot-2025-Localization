<launch>

	<arg name="robot_name" default="robot"/>
	<arg name="robot_name_slash" default="robot/"/>

    <group>
        <push-ros-namespace namespace="$(var robot_name)" />

        <!-- Local filter by robot localization -->
        <node pkg="robot_localization" exec="ekf_localization_node" name="ekf_velocity"> <!-- clear_params="true" -->
            <!-- <param name="tf_prefix" value="Tera" /> -->
            <!-- <arg name="local_filter_yaml" value="$(find-pkg-share local_filter)/param/local_filter.yaml" /> -->
            <param from="$(find-pkg-share local_filter)/param/local_filter.yaml" />
            <remap from="odometry/filtered" to="global_filter" />
            <remap from="set_pose" to="initialpose" />
            <remap from="/diagnostics" to="~diagnostics" />
            <remap from="/odom" to="$(var robot_name)/odom"/>
            <remap from="/imu/data_cov" to="$(var robot_name)/imu/data_cov"/>

            <param name="map_frame" value="$(var robot_name_slash)map"/>
            <param name="odom_frame" value="$(var robot_name_slash)odom"/>
            <param name="base_link_frame" value="$(var robot_name_slash)base_footprint"/>
            <param name="world_frame" value="$(var robot_name_slash)odom"/>
        </node>

        <!-- Odometry firmware and covariance feedback loop node (contain communication) -->
        <include file="$(find-pkg-share odometry)/launch/odometry_comm.launch">
            <arg name="robot_name" value="$(var robot_name)"/>
            <arg name="robot_name_slash" value="$(var robot_name_slash)"/>
        </include>

        <!-- IMU firmware and covariance feedback loop node (contain IMU spatial launch) -->
        <include file="$(find-pkg-share imu_drive)/launch/imu_drive_firm.xml">
            <arg name="robot_name" value="$(var robot_name)"/>
            <arg name="robot_name_slash" value="$(var robot_name_slash)"/>
        </include>
    </group>

</launch>
